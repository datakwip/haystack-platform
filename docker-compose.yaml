services:
  # TimescaleDB - Building Data
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: haystack-timescaledb
    environment:
      POSTGRES_DB: datakwip
      POSTGRES_USER: datakwip_user
      POSTGRES_PASSWORD: datakwip_password
    ports:
      - "5432:5432"
    volumes:
      - timescale-data:/var/lib/postgresql/data
      - ./schema/01_sql_schema_core_v2.sql:/docker-entrypoint-initdb.d/01_schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U datakwip_user -d datakwip"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - haystack-network

  # PostgreSQL - Simulator State
  statedb:
    image: postgres:15-alpine
    container_name: haystack-statedb
    environment:
      POSTGRES_DB: simulator_state
      POSTGRES_USER: simulator_user
      POSTGRES_PASSWORD: simulator_password
    ports:
      - "5433:5432"
    volumes:
      - state-data:/var/lib/postgresql/data
      - ./schema/02_simulator_state.sql:/docker-entrypoint-initdb.d/01_state.sql:ro
      - ./schema/03_simulator_activity_log.sql:/docker-entrypoint-initdb.d/02_activity.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U simulator_user -d simulator_state"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - haystack-network

  # API Service (db-service-layer with simulator extensions)
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: haystack-api
    environment:
      DATABASE_URL: postgresql://datakwip_user:datakwip_password@timescaledb:5432/datakwip
      STATE_DB_URL: postgresql://simulator_user:simulator_password@statedb:5432/simulator_state
      dk_env: "local"
      MAIN_DB_POOL_SIZE: 10
      MAIN_DB_MAX_OVERFLOW: 10
    ports:
      - "8000:8000"
    volumes:
      - ./api/src:/app/src:ro
    depends_on:
      timescaledb:
        condition: service_healthy
      statedb:
        condition: service_healthy
    networks:
      - haystack-network

  # Simulator Service
  simulator:
    build:
      context: ./simulator
      dockerfile: Dockerfile
    container_name: haystack-simulator
    environment:
      API_URL: http://api:8000
      SIMULATOR_ID: 1
      API_KEY: dev-key-local-only
      STATE_DB_URL: postgresql://simulator_user:simulator_password@statedb:5432/simulator_state
      HEALTH_CHECK_PORT: 8080
      SERVICE_INTERVAL_MINUTES: 15
      BUILDING_CONFIG_PATH: config/building_config.yaml
      DB_CONFIG_PATH: config/database_config.docker.yaml
    ports:
      - "8080:8080"
    volumes:
      - ./simulator/src:/app/src:ro
      - ./simulator/config:/app/config:ro
    depends_on:
      - api
    networks:
      - haystack-network

  # Web Application (Enterprise)
  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile
    container_name: haystack-webapp
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      API_INTERNAL_URL: http://api:8000
    ports:
      - "3000:3000"
    volumes:
      - ./webapp/app:/app/app:ro
      - ./webapp/components:/app/components:ro
    depends_on:
      - api
    networks:
      - haystack-network

  # Simulator Web Application
  simulator-webapp:
    build:
      context: ./simulator/webapp
      dockerfile: Dockerfile
    container_name: haystack-simulator-webapp
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080
    ports:
      - "3001:3000"
    volumes:
      - ./simulator/webapp/app:/app/app:ro
      - ./simulator/webapp/components:/app/components:ro
      - ./simulator/webapp/lib:/app/lib:ro
    depends_on:
      - simulator
    networks:
      - haystack-network

volumes:
  timescale-data:
  state-data:

networks:
  haystack-network:
    driver: bridge
